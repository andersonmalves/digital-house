{
	"info": {
		"_postman_id": "f5ffdbe4-efa8-4baf-8459-768ae57ee280",
		"name": "desafio-spring",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Requisito 01 - Cadastrar produtos",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const objectRequest = {",
							"  url: \"http://localhost:8080/api/v1/articles\",",
							"  method: \"DELETE\",",
							"  header: {",
							"        'content-type': 'application/json',",
							"    }",
							"};",
							"",
							"pm.sendRequest(objectRequest, function (_err, response) {",
							"    console.log(\"Pre-resquest: \" + {response});   ",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verifica se o retorno está OK\", function() {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.jsonBody;",
							"});",
							"",
							"pm.test(\"Verifica se retornou o status 201\", function() {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Verifica se retorna uma lista de produtos\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data).to.be.an(\"array\");",
							"    pm.expect(data).to.be.length(12);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"productId\": 1,\n        \"name\": \"Serra de Bancada\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"FORTGPRO\",\n        \"price\": 1800.00,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 2,\n        \"name\": \"Furadeira\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 500,\n        \"quantity\": 7,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 3,\n        \"name\": \"Soldadora\",\n        \"category\": \"Ferramentas\",\n        \"brand\": \"Black & Decker\",\n        \"price\": 350.00,\n        \"quantity\": 10,\n        \"freeShipping\": true,\n        \"prestige\": \"***\"\n    },\n    {\n        \"productId\": 4,\n        \"name\": \"Chuteira\",\n        \"category\": \"Esportes\",\n        \"brand\": \"Adidas\",\n        \"price\": 235.00,\n        \"quantity\": 6,\n        \"freeShipping\": true,\n        \"prestige\": \"*****\"\n    },\n    {\n        \"productId\": 5,\n        \"name\": \"Mini Cama elastica\",\n        \"category\": \"Esportes\",\n        \"brand\": \"Starboard\",\n        \"price\": 183.00,\n        \"quantity\": 4,\n        \"freeShipping\": true,\n        \"prestige\": \"*****\"\n    },\n    {\n        \"productId\": 6,\n        \"name\": \"Camiseta\",\n        \"category\": \"Esportes\",\n        \"brand\": \"Topper\",\n        \"price\": 80.00,\n        \"quantity\": 2,\n        \"freeShipping\": false,\n        \"prestige\": \"***\"\n    },\n    {\n        \"productId\": 7,\n        \"name\": \"Redmi Note 9\",\n        \"category\": \"Celulares\",\n        \"brand\": \"Xiaomi\",\n        \"price\": 2800.00,\n        \"quantity\": 15,\n        \"freeShipping\": true,\n        \"prestige\": \"****\"\n    },\n    {\n        \"productId\": 8,\n        \"name\": \"Smartwatch\",\n        \"category\": \"Celulares\",\n        \"brand\": \"Noga\",\n        \"price\": 1200.00,\n        \"quantity\": 5,\n        \"freeShipping\": true,\n        \"prestige\": \"**\"\n    },\n    {\n        \"productId\": 9,\n        \"name\": \"Camisa\",\n        \"category\": \"Roupas\",\n        \"brand\": \"Fila\",\n        \"price\": 79.00,\n        \"quantity\": 2,\n        \"freeShipping\": false,\n        \"prestige\": \"***\"\n    },\n    {\n        \"productId\": 10,\n        \"name\": \"Calcas\",\n        \"category\": \"Roupas\",\n        \"brand\": \"Oakley\",\n        \"price\": 73.00,\n        \"quantity\": 6,\n        \"freeShipping\": false,\n        \"prestige\": \"***\"\n    },\n    {\n        \"productId\": 11,\n        \"name\": \"Meias\",\n        \"category\": \"Roupas\",\n        \"brand\": \"Gonew\",\n        \"price\": 10.00,\n        \"quantity\": 8,\n        \"freeShipping\": false,\n        \"prestige\": \"*\"\n    },\n    {\n        \"productId\": 12,\n        \"name\": \"Shorts\",\n        \"category\": \"Roupas\",\n        \"brand\": \"Lacoste\",\n        \"price\": 275.00,\n        \"quantity\": 9,\n        \"freeShipping\": true,\n        \"prestige\": \"***\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/insert-articles-request",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"insert-articles-request"
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisito 02 - Listar todos produtos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verifica se o retorno está OK\", function() {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.jsonBody;",
							"});",
							"",
							"pm.test(\"Verifica se retornou o status 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verifica se retorna uma lista de produtos\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data).to.be.an(\"array\");",
							"    pm.expect(data).to.be.length(12);",
							"});",
							"",
							"pm.test(\"Verifica o primeiro produto\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[0]).to.be.an(\"object\");",
							"    pm.expect(data[0].productId).to.be.a(\"number\");",
							"    pm.expect(data[0].name).to.be.a(\"string\");",
							"    pm.expect(data[0].quantity).to.be.a(\"number\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/articles",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"articles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisito 03 - Listar produtos por categoria",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verifica se o retorno está OK\", function() {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.jsonBody;",
							"});",
							"",
							"pm.test(\"Verifica se retornou o status 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Serra de Bancada'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[0]).to.be.an(\"object\");",
							"    pm.expect(data[0].productId).to.be.a(\"number\");",
							"    pm.expect(data[0].name).to.eql('Serra de Bancada');",
							"    pm.expect(data[0].quantity).to.eql(5);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Furadeira'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[1]).to.be.an(\"object\");",
							"    pm.expect(data[1].productId).to.be.a(\"number\");",
							"    pm.expect(data[1].name).to.eql('Furadeira');",
							"    pm.expect(data[1].quantity).to.eql(7);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Soldadora'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[2]).to.be.an(\"object\");",
							"    pm.expect(data[2].productId).to.be.a(\"number\");",
							"    pm.expect(data[2].name).to.eql('Soldadora');",
							"    pm.expect(data[2].quantity).to.eql(10);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/articles?category=Ferramentas",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"articles"
					],
					"query": [
						{
							"key": "category",
							"value": "Ferramentas"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisito 04.1 - Listar produtos por Categoria + Frete grátis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verifica se o retorno está OK\", function() {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.jsonBody;",
							"});",
							"",
							"pm.test(\"Verifica se retornou o status 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Chuteira'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[0]).to.be.an(\"object\");",
							"    pm.expect(data[0].productId).to.be.a(\"number\");",
							"    pm.expect(data[0].name).to.eql('Chuteira');",
							"    pm.expect(data[0].quantity).to.eql(6);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Mini Cama elastica'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[1]).to.be.an(\"object\");",
							"    pm.expect(data[1].productId).to.be.a(\"number\");",
							"    pm.expect(data[1].name).to.eql('Mini Cama elastica');",
							"    pm.expect(data[1].quantity).to.eql(4);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/articles?category=Esportes&freeShipping=true",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"articles"
					],
					"query": [
						{
							"key": "category",
							"value": "Esportes"
						},
						{
							"key": "freeShipping",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisito 04.2 - Listar produtos por Frete grátis + Avaliação",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verifica se o retorno está OK\", function() {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.jsonBody;",
							"});",
							"",
							"pm.test(\"Verifica se retornou o status 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Serra de Bancada'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[0]).to.be.an(\"object\");",
							"    pm.expect(data[0].productId).to.be.a(\"number\");",
							"    pm.expect(data[0].name).to.eql('Serra de Bancada');",
							"    pm.expect(data[0].quantity).to.eql(5);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Furadeira'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[1]).to.be.an(\"object\");",
							"    pm.expect(data[1].productId).to.be.a(\"number\");",
							"    pm.expect(data[1].name).to.eql('Furadeira');",
							"    pm.expect(data[1].quantity).to.eql(7);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Redmi Note 9'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[2]).to.be.an(\"object\");",
							"    pm.expect(data[2].productId).to.be.a(\"number\");",
							"    pm.expect(data[2].name).to.eql('Redmi Note 9');",
							"    pm.expect(data[2].quantity).to.eql(15);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/articles?freeShipping=true&prestige=****",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"articles"
					],
					"query": [
						{
							"key": "freeShipping",
							"value": "true"
						},
						{
							"key": "prestige",
							"value": "****"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisito 05.1 - Listar produtos forma alfabética ascendente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verifica se o retorno está OK\", function() {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.jsonBody;",
							"});",
							"",
							"pm.test(\"Verifica se retornou o status 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Furadeira'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[0]).to.be.an(\"object\");",
							"    pm.expect(data[0].productId).to.be.a(\"number\");",
							"    pm.expect(data[0].name).to.eql('Furadeira');",
							"    pm.expect(data[0].quantity).to.eql(7);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Serra de Bancada'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[1]).to.be.an(\"object\");",
							"    pm.expect(data[1].productId).to.be.a(\"number\");",
							"    pm.expect(data[1].name).to.eql('Serra de Bancada');",
							"    pm.expect(data[1].quantity).to.eql(5);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Soldadora'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[2]).to.be.an(\"object\");",
							"    pm.expect(data[2].productId).to.be.a(\"number\");",
							"    pm.expect(data[2].name).to.eql('Soldadora');",
							"    pm.expect(data[2].quantity).to.eql(10);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=0",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"articles"
					],
					"query": [
						{
							"key": "category",
							"value": "Ferramentas"
						},
						{
							"key": "freeShipping",
							"value": "true"
						},
						{
							"key": "order",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisito 05.2 - Listar produtos em ordem decrescente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verifica se o retorno está OK\", function() {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.jsonBody;",
							"});",
							"",
							"pm.test(\"Verifica se retornou o status 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Soldadora'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[0]).to.be.an(\"object\");",
							"    pm.expect(data[0].productId).to.be.a(\"number\");",
							"    pm.expect(data[0].name).to.eql('Soldadora');",
							"    pm.expect(data[0].quantity).to.eql(10);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Serra de Bancada'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[1]).to.be.an(\"object\");",
							"    pm.expect(data[1].productId).to.be.a(\"number\");",
							"    pm.expect(data[1].name).to.eql('Serra de Bancada');",
							"    pm.expect(data[1].quantity).to.eql(5);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Furadeira'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[2]).to.be.an(\"object\");",
							"    pm.expect(data[2].productId).to.be.a(\"number\");",
							"    pm.expect(data[2].name).to.eql('Furadeira');",
							"    pm.expect(data[2].quantity).to.eql(7);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"articles"
					],
					"query": [
						{
							"key": "category",
							"value": "Ferramentas"
						},
						{
							"key": "freeShipping",
							"value": "true"
						},
						{
							"key": "order",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisito 6 - Listar produtos por menor preço",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verifica se o retorno está OK\", function() {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.jsonBody;",
							"});",
							"",
							"pm.test(\"Verifica se retornou o status 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Soldadora'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[0]).to.be.an(\"object\");",
							"    pm.expect(data[0].productId).to.be.a(\"number\");",
							"    pm.expect(data[0].name).to.eql('Soldadora');",
							"    pm.expect(data[0].quantity).to.eql(10);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Furadeira'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[1]).to.be.an(\"object\");",
							"    pm.expect(data[1].productId).to.be.a(\"number\");",
							"    pm.expect(data[1].name).to.eql('Furadeira');",
							"    pm.expect(data[1].quantity).to.eql(7);",
							"});",
							"",
							"",
							"pm.test(\"Verifica o produto 'Serra de Bancada'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[2]).to.be.an(\"object\");",
							"    pm.expect(data[2].productId).to.be.a(\"number\");",
							"    pm.expect(data[2].name).to.eql('Serra de Bancada');",
							"    pm.expect(data[2].quantity).to.eql(5);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"articles"
					],
					"query": [
						{
							"key": "category",
							"value": "Ferramentas"
						},
						{
							"key": "freeShipping",
							"value": "true"
						},
						{
							"key": "order",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisito 7 - Listar produtos por",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verifica se o retorno está OK\", function() {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.jsonBody;",
							"});",
							"",
							"pm.test(\"Verifica se retornou o status 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Serra de Bancada'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[0]).to.be.an(\"object\");",
							"    pm.expect(data[0].productId).to.be.a(\"number\");",
							"    pm.expect(data[0].name).to.eql('Serra de Bancada');",
							"    pm.expect(data[0].quantity).to.eql(5);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Furadeira'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[1]).to.be.an(\"object\");",
							"    pm.expect(data[1].productId).to.be.a(\"number\");",
							"    pm.expect(data[1].name).to.eql('Furadeira');",
							"    pm.expect(data[1].quantity).to.eql(7);",
							"});",
							"",
							"pm.test(\"Verifica o produto 'Soldadora'\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data[2]).to.be.an(\"object\");",
							"    pm.expect(data[2].productId).to.be.a(\"number\");",
							"    pm.expect(data[2].name).to.eql('Soldadora');",
							"    pm.expect(data[2].quantity).to.eql(10);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/articles?category=Ferramentas&freeShipping=true&order=3",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"articles"
					],
					"query": [
						{
							"key": "category",
							"value": "Ferramentas"
						},
						{
							"key": "freeShipping",
							"value": "true"
						},
						{
							"key": "order",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisito 8 - Solicitação de compra",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verifica se o retorno está OK\", function() {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.jsonBody;",
							"});",
							"",
							"pm.test(\"Verifica se retornou o status 201\", function() {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Verifica solicitação de compra\", function() {",
							"    const data = pm.response.json();",
							"    pm.expect(data).to.be.an(\"object\");",
							"    pm.expect(data.ticket).to.be.exist;",
							"    pm.expect(data.ticket.id).to.be.a(\"number\");",
							"    pm.expect(data.ticket.articles).to.be.an(\"array\");",
							"    pm.expect(data.ticket.articles).to.be.lengthOf(2);",
							"    pm.expect(data.ticket.articles[0]).have.all.keys(\"productId\", \"name\", \"category\", \"brand\", \"prestige\", \"price\", \"freeShipping\", \"quantity\");",
							"    pm.expect(data.ticket.total).to.be.a(\"number\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"articlesPurchaseRequest\": [\n        {\n            \"productId\": 1,\n            \"quantity\": 5\n        },\n        {\n            \"productId\": 2,\n            \"quantity\": 7\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/purchase-request",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"purchase-request"
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisito 11 - Cadastrar novos clientes",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisito 12 - Listar clientes",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Requisito 13 - Listar clientes filtrado por estado",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "default"
		}
	]
}